7/29: 
X setup work environment - code skeleton
X draw out hash table with chaining
X design hash table implementation
X implement simplified hash table w/hashing fcn
X try to implement "entry" modules (Node)
X work on T9

7/30:
X try to implement "overflow entries" (Doubly Linked List)
X Node + Doubly Linked List testing 

7/31 - 8/3:
- Hash 
	- resize 
	X multiply char->int value by base value of polynomial (an odd base number is often used).
	- load factor or # of collisions as determining factor of whether or not to resize?
- Integrated
	X reading files in main()
	X test adding rigorously / on smaller scale (use dataset_micro)
	X test adding rigorously / on larger scale (use dataset_small)
	X test adding rigorously / on largest scale (use dataset_large)
	X test get rigorously / on smaller scale (use dataset_micro)
	X test get rigorously / on larger scale (use dataset_small)
	X test get rigorously / on largest scale (use dataset_large)	
	X test remove rigorously / on smaller scale (use dataset_micro)    	
        X test remove rigorously / on larger scale (use dataset_small)
        X test remove rigorously / on largest scale (use dataset_large)	
- Main (i.e. program)
	- stdout statements working correctly
	- edge cases
	X do-while loop of user input
- Specs
	X find template
	- write
- LAB 10

8/3-8/4: 
- buffer + writing documentation/specification

TODO:
- take out STL!!!!
- improve hash fcn
- do some time tests on different parts of function
- resize to only prime numbers
- user input edge cases
- make some void fcns => bool fcns
- rewrite makefile to take out warning flags
